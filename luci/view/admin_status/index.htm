<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

-%>

<%
	require "luci.fs"
	require "luci.tools.status"

	local has_ipv6 = luci.fs.access("/proc/net/ipv6_route")
	local has_dhcp = luci.fs.access("/etc/config/dhcp")
	local has_wifi = luci.fs.stat("/etc/config/wireless")
	      has_wifi = has_wifi and has_wifi.size > 0
	local _, _, memtotal, memcached, membuffers, memfree, _, swaptotal, swapcached, swapfree = luci.sys.sysinfo()
	local has_swap
	if swaptotal > 0 then
		has_swap = 1
	end
	local has_dsl = luci.fs.stat("/etc/init.d/dsl_control")

	if luci.http.formvalue("status") == "1" then
		local ntm = require "luci.model.network".init()
		local wan = ntm:get_wannet()
		local wan6 = ntm:get_wan6net()

		local conn_count = tonumber((
			luci.sys.exec("wc -l /proc/net/nf_conntrack") or
			luci.sys.exec("wc -l /proc/net/ip_conntrack") or
			""):match("%d+")) or 0

		local conn_max = tonumber((
			luci.sys.exec("sysctl net.nf_conntrack_max") or
			luci.sys.exec("sysctl net.ipv4.netfilter.ip_conntrack_max") or
			""):match("%d+")) or 4096

		local rv = {
			uptime     = luci.sys.uptime(),
			localtime  = os.date(),
			loadavg    = { luci.sys.loadavg() },
			memtotal   = memtotal,
			memcached  = memcached,
			membuffers = membuffers,
			memfree    = memfree,
			swaptotal  = swaptotal,
			swapcached = swapcached,
			swapfree   = swapfree,
			connmax    = conn_max,
			conncount  = conn_count,
			leases     = luci.tools.status.dhcp_leases(),
			leases6    = luci.tools.status.dhcp6_leases(),
			wifinets   = luci.tools.status.wifi_networks()
		}

		if wan then
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = wan:proto(),
				ifname  = wan:ifname(),
				link    = wan:adminlink()
			}
		end

		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		if has_dsl then
			local dsl_stat = luci.sys.exec("/etc/init.d/dsl_control lucistat")
			local dsl_func = loadstring(dsl_stat)
			rv.dsl = dsl_func()
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end

	local system, model = luci.sys.sysinfo()
-%>

<%+header%>
<link rel="stylesheet" type="text/css" media="screen" href="<%=media%>/graph.css" />
<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript" src="<%=resource%>/modernizr.custom.04022.js"></script>
<script type="text/javascript">//<![CDATA[
	function progressbar(v, m)
	{
		var vn = parseInt(v) || 0;
		var mn = parseInt(m) || 100;
		var pc = Math.floor((100 / mn) * vn);

		return String.format(
			'<div style="width:200px; position:relative; border:1px solid #999999">' +
				'<div style="background-color:#CCCCCC; width:%d%%; height:15px">' +
					'<div style="position:absolute; left:0; top:0; text-align:center; width:100%%; color:#000000">' +
						'<small>%s / %s (%d%%)</small>' +
					'</div>' +
				'</div>' +
			'</div>', pc, v, m, pc
		);
	}

	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	XHR.poll(500, '<%=REQUEST_URI%>', { status: 1 },
		function(x, info)
		{
			var si = document.getElementById('wan4_i');
			var ss = document.getElementById('wan4_s');
			var ifc = info.wan;

			if (ifc && ifc.ifname && ifc.proto != 'none')
			{
				var s = String.format(
					'<%:Type%>: %s<br />' +
					'<%:Address%>: %s<br />' +
					'<%:Netmask%>: %s<br />' +
					'<%:Gateway%>: %s<br />',
						ifc.proto,
						(ifc.ipaddr) ? ifc.ipaddr : '0.0.0.0',
						(ifc.netmask && ifc.netmask != ifc.ipaddr) ? ifc.netmask : '255.255.255.255',
						(ifc.gwaddr) ? ifc.gwaddr : '0.0.0.0'
				);

				for (var i = 0; i < ifc.dns.length; i++)
				{
					s += String.format(
						'<%:DNS%> %d: %s<br />',
						i + 1, ifc.dns[i]
					);
				}

				if (ifc.expires > -1)
				{
					s += String.format(
						'<%:Expires%>: %t<br />',
						ifc.expires
					);
				}

				if (ifc.uptime > 0)
				{
					s += String.format(
						'<%:Connected%>: %t<br />',
						ifc.uptime
					);
				}

				ss.innerHTML = String.format('<small>%s</small>', s);
				si.innerHTML = String.format(
					'<img src="<%=resource%>/icons/ethernet.png" />' +
					'<br /><small><font color = "#ffffff"><a href="%s">%s</a></font></small>',
						ifc.link, ifc.ifname
				);
			}
			else
			{
				si.innerHTML = '<img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small>?</small>';
				ss.innerHTML = '<em><%:Not connected%></em>';
			}
		
			<% if has_wifi then %>
			var assoclist = [ ];

			var ws = document.getElementById('wifi_status_table');
			if (ws)
			{
				var wsbody = ws.rows[0].parentNode;
				while (ws.rows.length > 0)
					wsbody.deleteRow(0);

				for (var didx = 0; didx < info.wifinets.length; didx++)
				{
					var dev = info.wifinets[didx];
					var tr = wsbody.insertRow(-1);
					var td;
					td = tr.insertCell(-1);
					td.width     = "33%";
					td.innerHTML = dev.name;
					td.style.verticalAlign = "top";
					td = tr.insertCell(-1);
					var s = '';

					for (var nidx = 0; nidx < dev.networks.length; nidx++)
					{
						var net = dev.networks[nidx];
						var is_assoc = (net.bssid != '00:00:00:00:00:00' && net.channel);
						var icon;
						if (!is_assoc)
							icon = "<%=resource%>/icons/signal-none.png";
						else if (net.quality == 0)
							icon = "<%=resource%>/icons/signal-0.png";
						else if (net.quality < 25)
							icon = "<%=resource%>/icons/signal-0-25.png";
						else if (net.quality < 50)
							icon = "<%=resource%>/icons/signal-25-50.png";
						else if (net.quality < 75)
							icon = "<%=resource%>/icons/signal-50-75.png";
						else
							icon = "<%=resource%>/icons/signal-75-100.png";

						s += String.format(
							'<table><tr><td style="text-align:center; width:32px; padding:3px">' +
								'<img src="%s" title="<%:Signal%>: %d dBm / <%:Noise%>: %d dBm" />' +
								'<br /><small>%d%%</small>' +
							'</td><td style="text-align:left; padding:3px"><small>' +
								'<%:SSID%>: <a href="%s">%h</a><br />' +
								'<%:Mode%>: %s<br />' +
								'<%:Channel%>: %d (%.3f <%:GHz%>)<br />' +
								'<%:Bitrate%>: %s <%:Mbit/s%><br />',
								icon, net.signal, net.noise,
								net.quality,
								net.link, net.ssid,
								net.mode,
								net.channel, net.frequency,
								net.bitrate || '?'
						);

						if (is_assoc)
						{
							s += String.format(
								'<%:BSSID%>: %s<br />' +
								'<%:Encryption%>: %s',
									net.bssid,
									net.encryption
							);
						}
						else
						{
							s += '<em><%:Wireless is disabled or not associated%></em>';
						}

						s += '</small></td></tr></table>';

						for (var bssid in net.assoclist)
						{
							assoclist.push({
								bssid:    bssid,
								signal:   net.assoclist[bssid].signal,
								noise:    net.assoclist[bssid].noise,
								rx_rate:  net.assoclist[bssid].rx_rate,
								rx_mcs:   net.assoclist[bssid].rx_mcs,
								rx_40mhz: net.assoclist[bssid].rx_40mhz,
								tx_rate:  net.assoclist[bssid].tx_rate,
								tx_mcs:   net.assoclist[bssid].tx_mcs,
								tx_40mhz: net.assoclist[bssid].tx_40mhz,
								link:     net.link,
								name:     net.name
							});
						}
					}

					if (!s)
						s = '<em><%:No information available%></em>';

					td.innerHTML = s;
				}
			}

			<% end %>

			var e;

			if (e = document.getElementById('localtime'))
				e.innerHTML = info.localtime;

			if (e = document.getElementById('uptime'))
				e.innerHTML = String.format('%t', info.uptime);

			if (e = document.getElementById('loadavg'))
				e.innerHTML = String.format('%.02f, %.02f, %.02f',
					info.loadavg[0], info.loadavg[1], info.loadavg[2]);

			if (e = document.getElementById('total'))
			{
				e.innerHTML = parseInt(info.memtotal)
			}								
					
			if (e = document.getElementById('memtotal'))
			{
				var x = parseInt(100/(info.memtotal)*(info.memfree + info.membuffers + info.memcached));
				e.innerHTML = x
				e = document.getElementById('a')
				e.style.height = x + "%";
			}					

			if (e = document.getElementById('memfree'))
			{
				var xx = parseInt(100/(info.memtotal)*(info.memfree));
				e.innerHTML = xx
				e = document.getElementById('b')
				e.style.height = xx + "%";
			}

			if (e = document.getElementById('memcache'))
			{
				var xxx = parseInt(100/(info.memtotal)*(info.memcached));
				e.innerHTML = xxx
				e = document.getElementById('c')
				e.style.height = xxx + "%";
			}
			
			if (e = document.getElementById('membuff'))
			{
				var xxxx = parseInt(100/(info.memtotal)*(info.membuffers));
				e.innerHTML = xxxx
				e = document.getElementById('d')
				e.style.height = xxxx + "%";
			}
			if (e = document.getElementById('swapcache'))
				e.innerHTML = progressbar(
					info.swapcached + " <%:kB%>", info.swaptotal + " <%:kB%>"
				);

			if (e = document.getElementById('swaptotal'))
				e.innerHTML = progressbar(
					(info.swapfree + info.swapcached) + " <%:kB%>",
					info.swaptotal + " <%:kB%>"
				);

			if (e = document.getElementById('swapfree'))
				e.innerHTML = progressbar(
					info.swapfree + " <%:kB%>", info.swaptotal + " <%:kB%>"
				);

			if (e = document.getElementById('conns'))
				e.innerHTML = progressbar(info.conncount, info.connmax);

		}
	);
//]]></script>


<fieldset class="cbi-section">
<!--	<legend><font color= "#ffffff"><%:System%></font></legend>
-->

	<table width="100%" cellspacing="10" style="margin-left:60px;">
		<tr><td width="35%"><%:Hostname%></td><td><%=luci.sys.hostname() or "?"%></td></tr>
		<tr><td width="35%"><%:Model%></td><td><%=pcdata(model or "?")%></td></tr>
		<tr><td width="35%"><%:Firmware Version%></td><td>
			<%=pcdata(luci.version.distname)%> <%=pcdata(luci.version.distversion)%> /
			<%=pcdata(luci.version.luciname)%> (<%=pcdata(luci.version.luciversion)%>)
		</td></tr>
		<tr><td width="35%"><%:Kernel Version%></td><td><%=luci.sys.exec("uname -r")%></td></tr>
		<tr><td width="35%"><%:Local Time%></td><td id="localtime">-</td></tr>
		<tr><td width="35%"><%:Uptime%></td><td id="uptime">-</td></tr>
		<tr><td width="35%"><%:Load Average%></td><td id="loadavg">-</td></tr>
		<tr><td width="35%"><%:Authentication Status%></td><td><% if (uci.cursor():get("wxserver","wxauth", "disabled")== "0")  then %>Enabled<%else%>Disabled<%end%></td></tr>
		
		<tr><td width="35%" style="vertical-align:top"><%:IPv4 WAN Status%></td><td>
			<table><tr>
				<td id="wan4_i" style="width:16px; text-align:center; padding:3px;"><img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small>?</small></td>
				<td id="wan4_s" style="vertical-align:middle; padding: 3px;"><em><%:Collecting data...%></em></td>
			</tr></table>
		</td></tr>
	</table>
</fieldset>

<% if has_wifi then %>
<fieldset class="cbi-section" style="margin-left:60px;">
<!--	<legend><%:Wireless%></legend>
-->
	<table id="wifi_status_table" width="100%" cellspacing="10">
		<tr><td><em><%:Collecting data...%></em></td></tr>
	</table>
</fieldset>
<% end %>

<div class="container">

    <section class="main">
	
        <input type="radio" name="resize-graph" id="graph-small" checked="checked" style="display:hidden"/>
        <input type="radio" name="paint-graph" id="graph-blue" checked="checked"  style="display:hidden"/>
        <input type="radio" name="fill-graph" id="f-product1" checked="checked"  style="display:hidden"/>	
		
        <ul class="graph-container">
            <li>
                <span><td><%:Total Available%></td><span id="memtotal">-</span>%</span>
                <div class="bar-wrapper">
                    <div class="bar-container">
                        <div class="bar-background"></div>
                        <div id="a" class="bar-inner"></div>						
                        <div class="bar-foreground"></div>
                    </div>
                </div>
            </li>
            <li>
                <span><td width="33%"><%:Free%></td><span id="memfree">-</span>%</span>
                <div class="bar-wrapper">
                    <div class="bar-container">
                        <div class="bar-background"></div>
                        <div id="b" class="bar-inner"></div>
                        <div class="bar-foreground"></div>
                    </div>
                </div>
            </li>
            <li>
                <span><td width="33%"><%:Cached%></td><span id="memcache">-</span>%</span>
                <div class="bar-wrapper">
                    <div class="bar-container">
                        <div class="bar-background"></div>
                        <div id="c" class="bar-inner"></div>
                        <div class="bar-foreground"></div>
                    </div>
                </div>
            </li>
            <li>
				<span><td width="33%"><%:Buffered%></td><span id="membuff">-</span>%</span>				
                <div class="bar-wrapper">
                    <div class="bar-container">
                        <div class="bar-background"></div>
                        <div id="d" class="bar-inner"></div>
                        <div class="bar-foreground"></div>
                    </div>
                </div>
            </li>
            <li>
                <ul class="graph-marker-container">
                    <li style="bottom:25%;"><span>25%</span></li>
                    <li style="bottom:50%;"><span>50%</span></li>
                    <li style="bottom:75%;"><span>75%</span></li>
                    <li style="bottom:100%;"><span>100%</span></li>
                </ul>
            </li>
        </ul>

    </section>

</div>
<br/>
<br/>




<%+footer%>
